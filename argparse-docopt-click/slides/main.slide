argparse-docopt-click

Saurabh Hirani
@sphirani
saurabh.hirani@gmail.com

* Agenda:

- Expectations from a cli
- Steal from the masters
- argparse intro
- docopt intro
- click intro
- Demo
- Code review
- References
 
* Expectations from a cli - I:

- argument, options, flags 

  todo create $task
  todo create $task --tag name
  todo --verbose create $task --tag name

- Multiple arguments
  --names a b c

- Argument types
  boolean
  number
  custom?

- subcommands
  git push 
  git pull

* Expectations from a cli - II:

- input validation
  callbacks

- error handling
  colored terminal output?

- extensibility
  command specific functions?
  command specific files?

* Steal from the masters

- git
- aws

* argparse intro

.link https://docs.python.org/2.7/library/argparse.html argparse
- Comes with stdlib

* docopt 

.link http://docopt.org/ docopt
- More of command line description language
- Translates documentation into command line parser  
- Extremely easy to learn
- Available for different languages

* click

.link http://click.pocoo.org/5/ click
- Decouples parsing from one single places
- Based on the ideas of
  Composability 
  Invocation context 

* What is common in all 3?

- Great documentation
- Lots of community examples
- See the references section for more details

* Demo  

.link https://httpbin.org/ Based on httpbin

* argparse demo

.link https://github.com/saurabh-hirani/talks/blob/master/argparse-docopt-click/code/argparse-cli/cli.py code
.link https://github.com/saurabh-hirani/talks/blob/master/argparse-docopt-click/code/test.sh test

* argparse highlights

- Validation during parsing
- Repetition of data
.link https://stackoverflow.com/questions/17909294/python-argparse-mutual-exclusive-group mutually-exclusive args?
.link https://pymotw.com/2/argparse/ good pymotw intro

* docopt demo

.link https://github.com/saurabh-hirani/talks/blob/master/argparse-docopt-click/code/docopt-cli/cli.py code
.link https://github.com/saurabh-hirani/talks/blob/master/argparse-docopt-click/code/test.sh test
.link https://github.com/docopt/docopt/issues/133 from future gotcha

* docopt highlights

- Validation post parsing
- Tighter as compared to argparse
.link https://pypi.python.org/pypi/schema Resuable validation using schema
.link https://github.com/docopt/docopt/tree/master/examples gitrepo examples

* click demo

* click highlights

- Neither argparse nor docopt force you to rethink code reorganization - click does
- Context passing - no globals - --verbose
- Colored error messages by default
.link https://github.com/pallets/click/tree/master/examples gitrepo examples

* When to use what

- Each has its own place
- Your call
- What I do:
  docopt   - rapid prototyping / monitoring scripts / thinking aloud about how the cli should look 
  click    - bigger / long-term / wider audience projects
  argparse - legacy systems / don't-install-anything-on-me systems
